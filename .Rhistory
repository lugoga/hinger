toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count()
toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::reshape_wider(values_from = "n", colnames_from = "region")
toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count()
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::reshape_wider(values_from = "n", colnames_from = "region") %>%
mutate( across(contains("n_"), ~ifelse(is.na(.x),0,.x))) %>%
slice(-27) %>%
dplyr::select(-n_NA)
toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::reshape_wider(values_from = "n", colnames_from = "region")
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", colnames_from = "region") %>%
mutate( across(contains("n_"), ~ifelse(is.na(.x),0,.x))) %>%
slice(-27) %>%
dplyr::select(-n_NA)
toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count()
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", names_from = "region")
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", names_from = "region") %>%
# datawizard::reshape_wider(values_from = "n", colnames_from = "region") %>%
mutate( across(contains("n_"), ~ifelse(is.na(.x),0,.x))) %>%
slice(-27) %>%
dplyr::select(-n_NA)
toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", names_from = "region")
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", names_from = "region")# %>%
majina = mkoa.mkoa %>% names() %>% as_tibble() %>% separate(col = 1, into = c("aa", "bb"), sep = "_") %>% mutate(bb = if_else(is.na(bb), "mikoa", bb)) %>% pull(bb)
majina
mkoa.mkoa
mkoa.matrix = mkoa.mkoa %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.mkoa
mkoa.matrix = mkoa.mkoa %>%
filter(!is.na(mikoa)) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.matrix %>%
chorddiag(
type = "bipartite",
showTicks = F, tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 30, palette = "Berlin"),
margin = 90,
showGroupnames = T
)
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", names_from = "region")
mkoa.matrix = mkoa.mkoa %>%
filter(!is.na(mikoa)) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.matrix %>%
chorddiag(
type = "bipartite",
showTicks = F, tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 30, palette = "Berlin"),
margin = 90,
showGroupnames = T
)
changua.mkoa = majina[-1]
i =9
mtoko = mkoa.mkoa %>%
filter(mikoa == changua.mkoa[i]) %>%
dplyr::select(-changua.mkoa[i]) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mtoko
mtoko = mkoa.mkoa %>%
filter(mikoa == changua.mkoa[i]) %>%
dplyr::select(-changua.mkoa[i]) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.mkoa
mkoa.matrix
mkoa.mkoa
mtoko = mkoa.mkoa %>%
filter(mikoa == "Mara") %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mtoko
mtoko %>%
chorddiag(
type = "bipartite",
showTicks = F,
tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 27, palette = "Zissou 1"),
margin = 90,
showGroupnames = T
)
mtoko = mkoa.mkoa %>%
filter(mikoa == "Mara") %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mtoko %>%
chorddiag(
type = "bipartite",
showTicks = F,
tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 27, palette = "Zissou 1"),
margin = 90,
showGroupnames = T
)
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", names_from = "region")
mkoa.matrix = mkoa.mkoa %>%
filter(!is.na(mikoa)) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.matrix %>%
chorddiag(
type = "bipartite",
showTicks = F, tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 30, palette = "Berlin"),
margin = 90,
showGroupnames = T
)
blogdown::stop_server()
blogdown::serve_site()
mikoa = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx", sheet = 2) %>%
janitor::clean_names()
mikoa = readxl::read_excel("uhamisho_data.xlsx", sheet = 2) %>%
janitor::clean_names()
mikoa = mikoa %>%
dplyr::select(-2) %>%
separate(col = halmashauri, into = c("lga", "desig"), sep = " ") %>%
dplyr::select(-desig)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, eval = FALSE, comment = "", fig.path = "static")
mycolor <- viridis(10, alpha = 1, begin = 0, end = 1, option = "D")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, eval = FALSE, comment = "", fig.path = "static")
require(tidyverse)
require(viridis)
require(chorddiag)  #devtools::install_github("mattflor/chorddiag")
regions = data.frame(Mwanza = c(50, 25, 5, 12),
Dar = c(10, 55, 5, 20),
Tanga = c(45,12,29, 20),
Arusha = c(24,67,27,15))
regions
regions = as.matrix(regions)
row.names(regions) = c("Climate", "Waste", "Pollution", "Deforestation")
regions %>% chorddiag(type = "bipartite",
showTicks = F,
groupnameFontsize = 14,
groupnamePadding = 10,
margin = 90, showGroupnames = T)
groupColors <- c("#000000", "#FFDD89", "#957244", "#F26223")
regions %>% chorddiag(type = "bipartite",
showTicks = F,
groupColors = groupColors,
groupnameFontsize = 14,
groupnamePadding = 10,
margin = 90,
showGroupnames = T)
df = data_frame(`Company A` = c(800, 200, 100, 50, 140, 200, 140),
`Company B` = c(100, 2000, 300, 400, 50, 0, 290),
`Company C` = c(200, 500, 4000, 80, 120, 320, 600),
`Company D` = c(500, 200, 300, 5000, 250, 140, 450),
`Company E` = c(600, 300, 150, 600, 6000, 30, 0),
`Company F` = c(500, 400, 100, 300, 250, 4500, 140),
`Company G` = c(300, 50, 0, 150, 600, 250, 7000))
df
df = as.matrix(df)
row.names(df) = c(colnames(df))
chorddiag(data = df,
type = "directional",
showTicks = F,
groupnameFontsize = 14,
groupnamePadding = 10,
margin = 90)
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/13_AdjacencyDirectedWeighted.csv", header=TRUE)
# short names
colnames(data) <- c("Africa", "East Asia", "Europe", "Latin Ame.",   "North Ame.",   "Oceania", "South Asia", "South East Asia", "Soviet Union", "West.Asia")
rownames(data) <- colnames(data)
mycolor <- viridis(10, alpha = 1, begin = 0, end = 1, option = "D")
data %>%
as.matrix() %>%
chorddiag(type = "directional",
showTicks = F,  groupColors = mycolor,
groupnameFontsize = 14,
groupnamePadding = 10,
margin = 90)
knitr::include_graphics("index.en_files/figure-html/fig1.jpeg")
require(tidyverse)
require(patchwork)
require(cowplot)
# tuna = tibble(
#   tl = runif(n = 120, min = 30, max = 120),
#   seasons = rep(c("Northeast", "Southeast", "Inter"), each = 40)
# )
tuna = tibble(
tl = c(rnorm(n = 40, mean = 80, sd = 30),
rnorm(n = 40, mean = 61,10),
rnorm(n = 40, mean = 96, 25)),
seasons = rep(c("Northeast", "Southeast", "Inter"), each = 40)
)
ridges = tuna %>%
ggplot() +
ggridges::geom_density_ridges(aes(x = tl, y = seasons, fill = seasons), position = "identity", alpha = .6)+
theme(legend.position = "none")
ridges
box = tuna %>%
ggplot(aes(x = seasons, y = tl)) +
geom_boxplot(fill = "cyan4")
box
hist = tuna %>%
ggplot(aes(x = tl, fill = seasons, color = seasons)) +
geom_histogram(bins = 8,position = "identity", alpha = .4)
hist
gridExtra::grid.arrange(hist, box, ridges)
gridExtra::grid.arrange(hist, box, ridges, nrow = 2, top = "Top Panel", bottom = "Bottom Panel")
hist + box + ridges
hist | ridges
hist / ridges
(hist / ridges)| box
(hist | ridges)/ box
(hist | ridges)/ box + plot_annotation(tag_levels = "A")
(hist | ridges)/ box + plot_annotation(tag_levels = "A", tag_prefix = "Plot ")
box +geom_jitter(color = "cyan3")
(hist | box)/ ridges   & theme_classic()
plot_grid(hist, box, ridges, labels = c("A", "B", "C"), label_fontfamily = "serif", label_fontface = "bold", label_colour = "dodgerblue2")
plot_grid(plot_grid(hist, ridges), box, rows = 2)
blogdown:::new_post_addin()
require(tidyverse)
require(patchwork)
require(cowplot)
# tuna = tibble(
#   tl = runif(n = 120, min = 30, max = 120),
#   seasons = rep(c("Northeast", "Southeast", "Inter"), each = 40)
# )
tuna = tibble(
tl = c(rnorm(n = 40, mean = 80, sd = 30),
rnorm(n = 40, mean = 61,10),
rnorm(n = 40, mean = 96, 25)),
seasons = rep(c("Northeast", "Southeast", "Inter"), each = 40)
)
ridges = tuna %>%
ggplot() +
ggridges::geom_density_ridges(aes(x = tl, y = seasons, fill = seasons), position = "identity", alpha = .6)+
theme(legend.position = "none")
ridges
box = tuna %>%
ggplot(aes(x = seasons, y = tl)) +
geom_boxplot(fill = "cyan4")
box
hist = tuna %>%
ggplot(aes(x = tl, fill = seasons, color = seasons)) +
geom_histogram(bins = 8,position = "identity", alpha = .4)
hist
gridExtra::grid.arrange(hist, box, ridges)
gridExtra::grid.arrange(hist, box, ridges, nrow = 2, top = "Top Panel", bottom = "Bottom Panel")
hist + box + ridges
hist | ridges
hist / ridges
(hist / ridges)| box
(hist | ridges)/ box
(hist | ridges)/ box + plot_annotation(tag_levels = "A")
(hist | ridges)/ box + plot_annotation(tag_levels = "A", tag_prefix = "Plot ")
box +geom_jitter(color = "cyan3")
(hist | box)/ ridges   & theme_classic()
plot_grid(hist, box, ridges, labels = c("A", "B", "C"), label_fontfamily = "serif", label_fontface = "bold", label_colour = "dodgerblue2")
plot_grid(plot_grid(hist, ridges), box, rows = 2)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, comment = "", fig.path = "static")
require(sf)
require(highcharter)
require(tidyverse)
require(chorddiag)
require(treemapify)
library(RColorBrewer)
districts = st_read("d:/semba/vpo/nemp/data/spatial/Districts and TC as 2020.shp", quiet = TRUE) %>% janitor::clean_names()
district.tb = districts %>%
st_point_on_surface() %>%
wior::point_tb() %>%
mutate(across(is.numeric, round, 0)) %>%
separate(new_dist20, into = c("district", "lga"), sep = " ")%>%
separate(district, into = c("code", "aa"), sep = 3, remove = FALSE) %>%
mutate(code = str_to_upper(code),
zone = case_when(region_nam %in% c('Tanga', 'Morogoro', 'Pwani','Dar-es-salaam')~"Coast",
region_nam %in% c("Arusha","Kilimanjaro", "Manyara")~"Northern",
region_nam %in% c('Tabora', 'Kigoma', 'Shinyanga', 'Kagera', 'Mwanza',"Geita", 'Mara', "Simiyu", "Katavi")~"Lake",
region_nam %in% c("Dodoma", "Singida")~"Central",
region_nam %in% c("Iringa", "Mbeya", "Songwe", "Ruvuma", "Rukwa", "Njombe")~"Southern Highland",
region_nam %in% c('Lindi', 'Mtwara','Ruvuma')~"Southern")) %>%
filter(!is.na(zone))
district.tb %>%
hchart(type = "tilemap", hcaes(x = lon, y = lat, name = district, group = zone)) %>%
hc_chart(type = "tilemap") %>%
hc_plotOptions(
series = list(
dataLabels = list(
enabled = TRUE,
format = "{point.code}",
color = "white",
style = list(textOutline = FALSE)
)
)
) %>%
hc_tooltip(
headerFormat = "",
pointFormat = "<b>{point.name}</b> is in <b>{point.region_nam}</b>"
) %>%
hc_xAxis(visible = FALSE) %>%
hc_yAxis(visible = FALSE) %>%
hc_size(height = 800, width = 600)
walimu = readxl::read_excel("../data/ELIMU_AJIRA_JUNI2022_compressed.xlsx") %>% janitor::clean_names()
walimu.clean = walimu %>%
drop_na()%>%
mutate(year = as.integer(mwaka_kuhitimu_chuo),
jinsi = str_to_title(jinsi)) %>%
relocate(year, .after = mwaka_kuhitimu_chuo)
walimu.lga = walimu.clean %>%
separate(halmashauri, into = c("district", "b", "c"), sep = " ") %>%
unite(col = code, b:c, sep = " ") %>%
mutate(lga = case_when(code == "District Council"~"DC",
code == "Municipal Council"~"MC",
code == "City Council"~"CC",
code == "Town Council"~"TC",
code == "Mikindani Municipal"~"MC",
code == "Ujiji Municipal"~"MC"))
walimu.lga.freq = walimu.lga %>%
group_by(district, lga) %>%
count()
district.walimu = district.tb %>%
left_join(walimu.lga.freq) %>%
select(region_nam, zone, n, district)%>%
separate(district, into = c("code", "aa"), sep = 3, remove = FALSE) %>%
mutate(code = str_to_upper(code)) %>%
select(-aa)
hc = district.walimu %>%
hchart(type = "packedbubble", hcaes(name = district, value = n, group = zone))
q95 <- as.numeric(quantile(district.walimu$n, .95, na.rm = TRUE))
hc %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = "<b>{point.name}:</b> {point.n}"
) %>%
hc_plotOptions(
packedbubble = list(
maxSize = "150%",
zMin = 0,
layoutAlgorithm = list(
gravitationalConstant =  0.05,
splitSeries =  TRUE, # TRUE to group points
seriesInteraction = TRUE,
dragBetweenSeries = TRUE,
parentNodeLimit = TRUE
),
dataLabels = list(
enabled = TRUE,
format = "{point.code}",
filter = list(
property = "y",
operator = ">",
value = q95
),
style = list(
color = "black",
textOutline = "none",
fontWeight = "normal"
)
)
)
)
quest.tb =  walimu.clean %>%
group_by(kiwango_cha_elimu, jinsi) %>%
summarise(value = n(), .groups = "drop") %>%
rename(source = 2, target = 1) %>%
filter(value > 100)%>%
as.data.frame()
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(name=c(as.character(quest.tb$source),
as.character(quest.tb$target)) %>%
unique())
nodes = quest.tb %>%
select(-value) %>%
pivot_longer(cols = source:target) %>%
distinct(value) %>%
rename(name = 1) %>%
as.data.frame()
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
quest.tb$IDsource=match(quest.tb$source, nodes$name)-1
quest.tb$IDtarget=match(quest.tb$target, nodes$name)-1
# Make the Network
networkD3::sankeyNetwork(Links = quest.tb,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
fontFamily = "Myriad Pro",
LinkGroup = "source",
sinksRight=FALSE,
# height = 600, width = 800,
# colourScale=ColourScal,
nodeWidth=30,
iterations = 5,
fontSize=14,
nodePadding=30,
width = 1000,
height = 400)
tamisemi = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx") %>%
janitor::clean_names()
tam.clean = tamisemi %>%
separate(col = anakotoka, into = c("lga_toka", "bb", "lga_toka_name"))%>%
separate(col = anakoenda, into = c("lga_enda", "bb", "lga_enda_name")) %>%
relocate(c(lga_enda, lga_enda_name), .after = lga_toka_name) %>%
mutate(lga_toka = if_else(lga_toka=="Manipaa", "Manispaa", lga_toka),
lga_toka = if_else(lga_toka %in% c("Wiaya", "WIlaya"), "Wilaya", lga_toka),
lga_enda = if_else(lga_enda=="Manipaa", "Manispaa", lga_enda),
lga_enda = if_else(lga_enda %in% c("Wiaya", "WIlaya"), "Wilaya", lga_enda))
mikoa = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx", sheet = 2) %>%
janitor::clean_names()
mikoa = mikoa %>%
dplyr::select(-2) %>%
separate(col = halmashauri, into = c("lga", "desig"), sep = " ") %>%
dplyr::select(-desig)
toka = tam.clean %>%
dplyr::select(lga_toka_name) %>%
left_join(mikoa, by = c("lga_toka_name" = "lga"))
enda = tam.clean %>%
dplyr::select(lga_enda_name) %>%
left_join(mikoa, by = c("lga_enda_name" = "lga")) %>%
rename(mkoa = mikoa) %>%
mutate(region = mkoa) %>%
slice(-1)
mkoa.mkoa = toka %>%
bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::data_to_wide(values_from = "n", names_from = "region")
mkoa.matrix = mkoa.mkoa %>%
filter(!is.na(mikoa)) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.matrix %>%
chorddiag(
type = "bipartite",
showTicks = F, tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 30, palette = "Berlin"),
margin = 90,
showGroupnames = T
)
mtoko = mkoa.mkoa %>%
filter(mikoa == "Mara") %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mtoko %>%
chorddiag(
type = "bipartite",
showTicks = F,
tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 27, palette = "Zissou 1"),
margin = 90,
showGroupnames = T
)
blogdown::stop_server()
blogdown::serve_site()
