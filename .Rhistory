geom_edge_link(colour = "grey50") +
geom_node_point()+
geom_node_text(aes(label = name), colour = "black", size = 3.5, parse = TRUE, repel = TRUE, check_overlap = TRUE) +
theme_void()
kgcount <- cran_downloads(packages = spatial_packages,
from = Sys.Date()-1*365,
to = Sys.Date())
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000) %>%
ggplot(aes(x = reorder(package, downloads), y = downloads)) +
geom_col(aes(fill = downloads)) +
geom_text(aes(y = 100000, label = package), size = 3.5, colour = "white",
hjust = 0, nudge_y = -500, angle = 0) +
scale_fill_viridis_c(name = "Downloads", option = "D", end = 0.75)+
theme_bw(base_size = 12) +
theme(axis.text.y = element_blank(), legend.position = "none")+
coord_flip()+
scale_y_continuous(expand = c(0, NA), name = "Downloads per month", position = "right")+
scale_x_discrete(name = "Spatial Package")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
getOption("repos")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
ls()
save.image(file = "content/post/2020-02-04-vector-data-in-r/data/crans.RData")
load(file = "content/post/2020-02-04-vector-data-in-r/data/crans.RData")
blogdown::stop_server()
blogdown::serve_site()
load(file = "d:/semba/theHinge/content/post/2020-02-04-vector-data-in-r/data/crans.RData")
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey50") +
geom_node_point(colour="lightblue", size=3) +
geom_node_text(aes(label=name), repel=T) +  theme_graph()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey50") +
geom_node_point(colour="lightblue", size=2) +
geom_node_text(aes(label=name), repel=T) +  theme_graph()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey50") +
geom_node_point(colour="lightblue", size=2) +
geom_node_text(aes(label=name), repel=FALSE) +  theme_graph()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey50") +
geom_node_point(colour="lightblue", size=2) +
geom_node_text(aes(label=name), repel=FALSE, repel = FALSE, check_overlap = TRUE, nudge_y = .2)) +  theme_graph()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey50") +
geom_node_point(colour="lightblue", size=2) +
geom_node_text(aes(label=name), repel=FALSE, repel = FALSE, check_overlap = TRUE, nudge_y = .2) +  theme_graph()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey50") +
geom_node_point(colour="lightblue", size=2) +
geom_node_text(aes(label=name), repel=FALSE, check_overlap = TRUE, nudge_y = .2) +  theme_graph()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey") +
geom_node_point(colour="lightblue", size=2) +
geom_node_text(aes(label=name), repel=FALSE, check_overlap = TRUE, nudge_y = .2) +
theme_graph()
install.packages("blogdown")
require(igisci)
sierraClimate
sierraStations
rerddap::ed_search(query = "CMIP5")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::new_post_addin()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, comment = "")
require(sf)
require(highcharter)
require(tidyverse)
districts = st_read("d:/semba/vpo/nemp/data/spatial/Districts and TC as 2020.shp", quiet = TRUE) %>% janitor::clean_names()
district.tb = districts %>%
st_point_on_surface() %>%
wior::point_tb() %>%
mutate(across(is.numeric, round, 0)) %>%
separate(new_dist20, into = c("district", "lga"), sep = " ")%>%
separate(district, into = c("code", "aa"), sep = 3, remove = FALSE) %>%
mutate(code = str_to_upper(code),
zone = case_when(region_nam %in% c('Tanga', 'Morogoro', 'Pwani','Dar-es-salaam')~"Coast",
region_nam %in% c("Arusha","Kilimanjaro", "Manyara")~"Northern",
region_nam %in% c('Tabora', 'Kigoma', 'Shinyanga', 'Kagera', 'Mwanza',"Geita", 'Mara', "Simiyu", "Katavi")~"Lake",
region_nam %in% c("Dodoma", "Singida")~"Central",
region_nam %in% c("Iringa", "Mbeya", "Songwe", "Ruvuma", "Rukwa", "Njombe")~"Southern Highland",
region_nam %in% c('Lindi', 'Mtwara','Ruvuma')~"Southern")) %>%
filter(!is.na(zone))
district.tb %>%
hchart(type = "tilemap", hcaes(x = lon, y = lat, name = district, group = zone)) %>%
hc_chart(type = "tilemap") %>%
hc_plotOptions(
series = list(
dataLabels = list(
enabled = TRUE,
format = "{point.code}",
color = "white",
style = list(textOutline = FALSE)
)
)
) %>%
hc_tooltip(
headerFormat = "",
pointFormat = "<b>{point.name}</b> is in <b>{point.region_nam}</b>"
) %>%
hc_xAxis(visible = FALSE) %>%
hc_yAxis(visible = FALSE) %>%
hc_size(height = 800, width = 600)
walimu = readxl::read_excel("ELIMU_AJIRA_JUNI2022_compressed.xlsx") %>% janitor::clean_names()
walimu = readxl::read_excel("../data/ELIMU_AJIRA_JUNI2022_compressed.xlsx") %>% janitor::clean_names()
walimu = readxl::read_excel("../data/ELIMU_AJIRA_JUNI2022_compressed.xlsx") %>% janitor::clean_names()
walimu.clean = walimu %>%
drop_na()%>%
mutate(year = as.integer(mwaka_kuhitimu_chuo),
jinsi = str_to_title(jinsi)) %>%
relocate(year, .after = mwaka_kuhitimu_chuo)
walimu.lga = walimu.clean %>%
separate(halmashauri, into = c("district", "b", "c"), sep = " ") %>%
unite(col = code, b:c, sep = " ") %>%
mutate(lga = case_when(code == "District Council"~"DC",
code == "Municipal Council"~"MC",
code == "City Council"~"CC",
code == "Town Council"~"TC",
code == "Mikindani Municipal"~"MC",
code == "Ujiji Municipal"~"MC"))
walimu.lga.freq = walimu.lga %>%
group_by(district, lga) %>%
count()
district.walimu = district.tb %>%
left_join(walimu.lga.freq) %>%
select(region_nam, zone, n, district)%>%
separate(district, into = c("code", "aa"), sep = 3, remove = FALSE) %>%
mutate(code = str_to_upper(code)) %>%
select(-aa)
hc = district.walimu %>%
hchart(type = "packedbubble", hcaes(name = district, value = n, group = zone))
q95 <- as.numeric(quantile(district.walimu$n, .95, na.rm = TRUE))
hc %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = "<b>{point.name}:</b> {point.n}"
) %>%
hc_plotOptions(
packedbubble = list(
maxSize = "150%",
zMin = 0,
layoutAlgorithm = list(
gravitationalConstant =  0.05,
splitSeries =  TRUE, # TRUE to group points
seriesInteraction = TRUE,
dragBetweenSeries = TRUE,
parentNodeLimit = TRUE
),
dataLabels = list(
enabled = TRUE,
format = "{point.code}",
filter = list(
property = "y",
operator = ">",
value = q95
),
style = list(
color = "black",
textOutline = "none",
fontWeight = "normal"
)
)
)
)
quest.tb =  walimu.clean %>%
group_by(kiwango_cha_elimu, jinsi) %>%
summarise(value = n(), .groups = "drop") %>%
rename(source = 2, target = 1) %>%
filter(value > 100)%>%
as.data.frame()
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(name=c(as.character(quest.tb$source),
as.character(quest.tb$target)) %>%
unique())
nodes = quest.tb %>%
select(-value) %>%
pivot_longer(cols = source:target) %>%
distinct(value) %>%
rename(name = 1) %>%
as.data.frame()
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
quest.tb$IDsource=match(quest.tb$source, nodes$name)-1
quest.tb$IDtarget=match(quest.tb$target, nodes$name)-1
# Make the Network
networkD3::sankeyNetwork(Links = quest.tb,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
fontFamily = "Myriad Pro",
LinkGroup = "source",
sinksRight=FALSE,
# height = 600, width = 800,
# colourScale=ColourScal,
nodeWidth=30,
iterations = 5,
fontSize=14,
nodePadding=30,
width = 1000,
height = 400)
tamisemi = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx") %>%
janitor::clean_names()
tam.clean = tamisemi %>%
separate(col = anakotoka, into = c("lga_toka", "bb", "lga_toka_name"))%>%
separate(col = anakoenda, into = c("lga_enda", "bb", "lga_enda_name")) %>%
relocate(c(lga_enda, lga_enda_name), .after = lga_toka_name) %>%
mutate(lga_toka = if_else(lga_toka=="Manipaa", "Manispaa", lga_toka),
lga_toka = if_else(lga_toka %in% c("Wiaya", "WIlaya"), "Wilaya", lga_toka),
lga_enda = if_else(lga_enda=="Manipaa", "Manispaa", lga_enda),
lga_enda = if_else(lga_enda %in% c("Wiaya", "WIlaya"), "Wilaya", lga_enda))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, comment = FALSE)
require(tidyverse)
require(chorddiag)
require(treemapify)
library(RColorBrewer)
tam.matrix = tam.clean  %>%
group_by(lga_toka, lga_enda) %>%
count() %>%
ungroup() %>%
slice(-1) %>%
datawizard::reshape_wider(names_from = "lga_toka",values_from = "n") %>%
column_to_rownames(var = "lga_enda") %>%
rename(Jiji =1, Manispaa = 2, Mji = 3, Wilaya = 4 ) %>%
mutate(Mji = replace_na(Mji, replace = 0)) %>%
as.matrix()
tam.matrix%>%
chorddiag(type = "bipartite",
showTicks = F, tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
margin = 90,
showGroupnames = T)
mikoa = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx", sheet = 2) %>%
janitor::clean_names()
mikoa = mikoa %>%
dplyr::select(-2) %>%
separate(col = halmashauri, into = c("lga", "desig"), sep = " ") %>%
dplyr::select(-desig)
toka = tam.clean %>%
dplyr::select(lga_toka_name) %>%
left_join(mikoa, by = c("lga_toka_name" = "lga"))
enda = tam.clean %>%
dplyr::select(lga_enda_name) %>%
left_join(mikoa, by = c("lga_enda_name" = "lga")) %>%
rename(mkoa = mikoa) %>%
mutate(region = mkoa) %>%
slice(-1)
mkoa.mkoa = toka %>% bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::reshape_wider(values_from = "n", colnames_from = "region") %>%
mutate( across(contains("n_"), ~ifelse(is.na(.x),0,.x))) %>%
slice(-27) %>%
dplyr::select(-n_NA)
majina = mkoa.mkoa %>% names() %>% as_tibble() %>% separate(col = 1, into = c("aa", "bb"), sep = "_") %>% mutate(bb = if_else(is.na(bb), "mikoa", bb)) %>% pull(bb)
names(mkoa.mkoa) = majina
mkoa.matrix = mkoa.mkoa %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.matrix %>%
chorddiag(
type = "bipartite",
showTicks = F, tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 30, palette = "Berlin"),
margin = 90,
showGroupnames = T
)
changua.mkoa = majina[-1]
i =9
mtoko = mkoa.mkoa %>%
filter(mikoa == changua.mkoa[i]) %>%
dplyr::select(-changua.mkoa[i]) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mtoko %>%
chorddiag(
type = "bipartite",
showTicks = F,
tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 27, palette = "Zissou 1"),
margin = 90,
showGroupnames = T
)
mikoa = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx", sheet = 2) %>%
janitor::clean_names()
mikoa = mikoa %>%
dplyr::select(-2) %>%
separate(col = halmashauri, into = c("lga", "desig"), sep = " ") %>%
dplyr::select(-desig)
toka = tam.clean %>%
dplyr::select(lga_toka_name) %>%
left_join(mikoa, by = c("lga_toka_name" = "lga"))
enda = tam.clean %>%
dplyr::select(lga_enda_name) %>%
left_join(mikoa, by = c("lga_enda_name" = "lga")) %>%
rename(mkoa = mikoa) %>%
mutate(region = mkoa) %>%
slice(-1)
mkoa.mkoa = toka %>% bind_cols(enda) %>%
group_by(mikoa, region) %>%
count() %>%
datawizard::reshape_wider(values_from = "n", colnames_from = "region") %>%
mutate( across(contains("n_"), ~ifelse(is.na(.x),0,.x))) %>%
slice(-27) %>%
dplyr::select(-n_NA)
majina = mkoa.mkoa %>% names() %>% as_tibble() %>% separate(col = 1, into = c("aa", "bb"), sep = "_") %>% mutate(bb = if_else(is.na(bb), "mikoa", bb)) %>% pull(bb)
names(mkoa.mkoa) = majina
mkoa.matrix = mkoa.mkoa %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mkoa.matrix %>%
chorddiag(
type = "bipartite",
showTicks = F, tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 30, palette = "Berlin"),
margin = 90,
showGroupnames = T
)
changua.mkoa = majina[-1]
i =9
mtoko = mkoa.mkoa %>%
filter(mikoa == changua.mkoa[i]) %>%
dplyr::select(-changua.mkoa[i]) %>%
column_to_rownames(var = 'mikoa') %>%
as.matrix()
mtoko %>%
chorddiag(
type = "bipartite",
showTicks = F,
tickInterval = 2,
groupnameFontsize = 14,
groupnamePadding = 10,
groupColors = hcl.colors(n = 27, palette = "Zissou 1"),
margin = 90,
showGroupnames = T
)
tamisemi = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx") %>%
janitor::clean_names()
tam.clean = tamisemi %>%
separate(col = anakotoka, into = c("lga_toka", "bb", "lga_toka_name"))%>%
separate(col = anakoenda, into = c("lga_enda", "bb", "lga_enda_name")) %>%
relocate(c(lga_enda, lga_enda_name), .after = lga_toka_name) %>%
mutate(lga_toka = if_else(lga_toka=="Manipaa", "Manispaa", lga_toka),
lga_toka = if_else(lga_toka %in% c("Wiaya", "WIlaya"), "Wilaya", lga_toka),
lga_enda = if_else(lga_enda=="Manipaa", "Manispaa", lga_enda),
lga_enda = if_else(lga_enda %in% c("Wiaya", "WIlaya"), "Wilaya", lga_enda))
mikoa = readxl::read_excel("d:/semba/vpo/data/tamisemi/uhamisho_data.xlsx", sheet = 2) %>%
janitor::clean_names()
mikoa = mikoa %>%
dplyr::select(-2) %>%
separate(col = halmashauri, into = c("lga", "desig"), sep = " ") %>%
dplyr::select(-desig)
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, eval = FALSE, comment = "")
load(file = "d:/semba/theHinge/content/post/2020-02-04-vector-data-in-r/data/crans.RData")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, eval = FALSE, comment = "")
load(file = "d:/semba/theHinger/content/post/2020-02-04-vector-data-in-r/data/crans.RData")
library(tidyverse)
library(tidygraph)
library(ggraph)
library(ctv)
library(tools)
library(cranlogs)
all_cran_packages <- CRAN_package_db()
all_cran_packages %>%
glimpse()
tidied_cran_imports = all_cran_packages %>%
janitor::clean_names() %>%
select(package, imports) %>%
as_tibble() %>%
separate_rows(imports, sep = ",") %>%
mutate(imports = str_replace(imports,"\\s*\\([^\\)]+\\)","")) %>%
mutate(imports = str_trim(imports, side = "both"))
tidied_cran_imports %>% head(10)
tidyverse_tbl <- tidied_cran_imports %>%
filter(package %in% tidyverse_packages()) %>%
filter(imports %in% tidyverse_packages()) %>%
as_tbl_graph()
ggraph(tidyverse_tbl, layout = "nicely")  +
geom_edge_link(colour = "grey50") +
geom_node_point()+
geom_node_text(aes(label = name), colour = "black", size = 3.5, parse = TRUE, repel = FALSE, check_overlap = TRUE, nudge_y = .12) +
theme_void()
env_packages <- ctv:::.get_pkgs_from_ctv_or_repos(views = "Environmetrics") %>%
unlist(use.names = FALSE)
env_tbl <- tidied_cran_imports %>%
filter(package %in% env_packages) %>%
filter(imports %in% env_packages) %>%
as_tbl_graph()
env_tbl %>%
ggraph(layout = 'nicely') +
geom_edge_link(colour = "grey50") +
geom_node_point()+
geom_node_text(aes(label = name), colour = "black", size = 3.5, parse = TRUE, repel = FALSE, check_overlap = TRUE, nudge_y = .3) +
theme_void()
spatial_packages <- ctv:::.get_pkgs_from_ctv_or_repos(views = "Spatial") %>%
unlist(use.names = FALSE)
sp_tbl <- tidied_cran_imports %>%
filter(package %in% spatial_packages) %>%
filter(imports %in% spatial_packages) %>%
as_tbl_graph()
sp_tbl %>%
ggraph(layout = 'fr') +
geom_edge_link(colour = "grey") +
geom_node_point(colour="lightblue", size=2) +
geom_node_text(aes(label=name), repel=FALSE, check_overlap = TRUE, nudge_y = .2) +
theme_graph()
sp_tbl %>%
ggraph(layout = 'linear',circular = TRUE) +
geom_edge_link(colour = "grey50") +
geom_node_point()+
geom_node_text(aes(label = name), colour = "black", size = 3.5, parse = TRUE, repel = TRUE, check_overlap = TRUE) +
theme_void()
kgcount <- cran_downloads(packages = spatial_packages,
from = Sys.Date()-1*365,
to = Sys.Date())
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000) %>%
ggplot(aes(x = reorder(package, downloads), y = downloads)) +
geom_col(aes(fill = downloads)) +
geom_text(aes(y = 100000, label = package), size = 3.5, colour = "white",
hjust = 0, nudge_y = -500, angle = 0) +
scale_fill_viridis_c(name = "Downloads", option = "D", end = 0.75)+
theme_bw(base_size = 12) +
theme(axis.text.y = element_blank(), legend.position = "none")+
coord_flip()+
scale_y_continuous(expand = c(0, NA), name = "Downloads per month", position = "right")+
scale_x_discrete(name = "Spatial Package")
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000)
require(highcharter)
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000)
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000) %>%
hchart(type = "bar", hcaes(x = package, y = downloads))
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000) %>%
arrange(desc(downloads))
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000) %>%
arrange(desc(downloads)) %>%
hchart(type = "bar", hcaes(x = package, y = downloads))
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000) %>%
arrange(desc(downloads)) %>%
hchart(type = "bar", hcaes(x = package, y = downloads)) %>%
hc_xAxis(title = list(text = "Number of downloads"))
kgcount %>%
group_by(package) %>%
summarise(downloads = sum(count)) %>%
filter(downloads >= 450000) %>%
arrange(desc(downloads)) %>%
hchart(type = "bar", hcaes(x = package, y = downloads)) %>%
hc_xAxis(title = list(text = "Number of downloads")) %>%
hc_yAxis(title = FALSE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
